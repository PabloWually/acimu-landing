---
import Layout from '@/layouts/Layout.astro';
import { Home, Sofa, Trees, ChevronLeft, ChevronRight } from 'lucide-astro';

const slides = [
  {
    title: '',
    subtitle: '',
    imageUrl: 'https://d37oqcizs0sma9.cloudfront.net/equipo.webp',
  },
];
---

<Layout title="ACIMU - Modern Architectural Design" description="Welcome to ACIMU, where we blend modern aesthetics with functional design to create inspiring spaces.">
    <!-- Hero Section with Slideshow -->
    <section class="hero">
      <div class="slideshow-container">
        <div class="slideshow">
          {slides.map((slide) => (
            <div class="slide" style={`background-image: url('${slide.imageUrl}');`}>
              <div class="overlay"></div>
              <div class="content">
                <h1>{slide.title}</h1>
                <p>{slide.subtitle}</p>
              </div>
            </div>
          ))}
        </div>
      </div>

      <!-- <button class="prev"><ChevronLeft size={48} /></button> -->
      <!-- <button class="next"><ChevronRight size={48} /></button> -->

      <!-- <div class="dots"> -->
        <!-- {slides.map((_, index) => ( -->
          <!-- <button class="dot" data-index={index}></button> -->
        <!-- ))} -->
      <!-- </div> -->
    </section>

    <!-- Client Testimonials -->
    <section class="container testimonials">
        <h2>Testimonios</h2>
        <div class="testimonial">
            <blockquote>"ACIMU transformed our vision into a reality beyond our wildest dreams. Their attention to detail is unmatched."</blockquote>
            <cite>- Alex Johnson</cite>
        </div>
        <div class="testimonial">
            <blockquote>"The most professional and creative team I have ever worked with. Highly recommended!"</blockquote>
            <cite>- Samantha Lee</cite>
        </div>
    </section>

</Layout>

<style>
  /* Hero Slideshow */
  .hero {
    height: 100vh;
    position: relative;
    overflow: hidden;
  }
  .slideshow-container {
    height: 100%;
    width: 100%;
    overflow: hidden;
  }
  .slideshow {
    height: 100%;
    display: flex;
    transition: transform 0.5s ease-in-out;
  }
  .slide {
    min-width: 100%;
    height: 100%;
    background-size: cover;
    background-position: top;
    background-repeat: no-repeat;
    position: relative;
    display: flex;
    align-items: top;
    justify-content: center;
    text-align: center;
    color: white;
  }
  .overlay {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(0,0,0,0.5);
  }
  .slide .content {
    position: relative;
    z-index: 2;
  }
  .slide h1 {
    font-size: 4rem;
    margin-bottom: var(--spacing-md);
  }
  .slide p {
    font-size: 1.5rem;
  }

  /* Slideshow Controls */
  .prev, .next {
    cursor: pointer;
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    background-color: rgba(0,0,0,0.3);
    color: white;
    border: none;
    padding: var(--spacing-sm);
    border-radius: 50%;
    z-index: 10;
    transition: background-color 0.3s ease;
  }
  .prev:hover, .next:hover {
    background-color: rgba(0,0,0,0.6);
  }
  .prev {
    left: var(--spacing-lg);
  }
  .next {
    right: var(--spacing-lg);
  }

  /* Dots */
  .dots {
    position: absolute;
    bottom: var(--spacing-lg);
    left: 50%;
    transform: translateX(-50%);
    display: flex;
    gap: var(--spacing-sm);
    z-index: 10;
  }
  .dot {
    cursor: pointer;
    height: 12px;
    width: 12px;
    background-color: rgba(255, 255, 255, 0.5);
    border-radius: 50%;
    display: inline-block;
    transition: background-color 0.3s ease;
    border: none;
    padding: 0;
  }
  .dot.active, .dot:hover {
    background-color: white;
  }

  /* Sections */
  .testimonials {
    padding: var(--spacing-xl) 0;
  }
  h2 {
    text-align: center;
    font-size: 2.5rem;
    margin-bottom: var(--spacing-lg);
  }

  /* Testimonials */
  .testimonial {
    max-width: 800px;
    margin: 0 auto var(--spacing-lg);
    text-align: center;
  }
  .testimonial blockquote {
    font-size: 1.5rem;
    font-family: var(--font-serif);
    border-left: 4px solid var(--color-primary);
    padding-left: var(--spacing-md);
    margin: 0 0 var(--spacing-sm) 0;
    font-style: italic;
  }
  .testimonial cite {
    font-style: normal;
    font-weight: bold;
  }

  /* Responsive adjustments */
  @media (max-width: 768px) {
    .slide h1 {
      font-size: 2.5rem;
    }
    .slide p {
      font-size: 1.2rem;
    }
    .prev, .next {
      padding: var(--spacing-xs);
    }
    .prev {
      left: var(--spacing-md);
    }
    .next {
      right: var(--spacing-md);
    }
    .dots {
      bottom: var(--spacing-md);
    }
    .featured-projects, .services, .stats, .testimonials {
      padding: var(--spacing-lg) 0;
    }
    h2 {
      font-size: 2rem;
    }
    .testimonial blockquote {
      font-size: 1.2rem;
    }
  }

  @media (max-width: 480px) {
    .slide h1 {
      font-size: 2rem;
    }
    .slide p {
      font-size: 1rem;
    }
    .prev, .next {
      display: none;
    }
    h2 {
      font-size: 1.75rem;
    }
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const slideshow = document.querySelector('.slideshow');
    const slides = document.querySelectorAll('.slide');
    const prevButton = document.querySelector('.prev');
    const nextButton = document.querySelector('.next');
    const dotsContainer = document.querySelector('.dots');
    const dots = document.querySelectorAll('.dot');

    let currentIndex = 0;
    const totalSlides = slides.length;
    let slideInterval;

    function goToSlide(index: number) {
      if (index < 0) {
        index = totalSlides - 1;
      } else if (index >= totalSlides) {
        index = 0;
      }
      
      slideshow.style.transform = `translateX(-${index * 100}%)`;
      
      dots.forEach(dot => dot.classList.remove('active'));
      dots[index].classList.add('active');
      
      currentIndex = index;
    }

    function startSlideShow() {
      slideInterval = setInterval(() => {
        goToSlide(currentIndex + 1);
      }, 10000); // Change slide every 5 seconds
    }

    function resetSlideShow() {
      clearInterval(slideInterval);
      startSlideShow();
    }

    prevButton.addEventListener('click', () => {
      goToSlide(currentIndex - 1);
      resetSlideShow();
    });

    nextButton.addEventListener('click', () => {
      goToSlide(currentIndex + 1);
      resetSlideShow();
    });

    dotsContainer.addEventListener('click', (e) => {
      const target = e.target;
      if (target.classList.contains('dot')) {
        const index = parseInt(target.dataset.index, 10);
        goToSlide(index);
        resetSlideShow();
      }
    });

    // Initialize the first slide and start the automatic slideshow
    goToSlide(0);
    startSlideShow();
  });
</script>
